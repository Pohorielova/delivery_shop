{"version":3,"file":"static/js/543.afbe1ff5.chunk.js","mappings":"4OAQMA,EAAOC,EAAAA,GAAAA,GAAH,uTACG,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MAErB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,QAMT,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOE,SAMpCC,EAAMP,EAAAA,GAAAA,OAAH,sRACa,SAAAC,GAAC,OAAIA,EAAEC,MAAME,OAAOI,WAG7B,SAAAP,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MACrB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOK,SACd,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,QAIlB,SAAAV,GAAC,OAAIA,EAAEC,MAAME,OAAOQ,cAC/B,SAAAX,GAAC,OAAIA,EAAEC,MAAME,OAAOI,WAgDjC,UA7CiB,WACf,OAAgCK,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,GADWC,EAAAA,EAAAA,MACKC,SAASC,MAAM,GAC7BC,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBF,WAERG,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAcC,KAAKV,KAClB,IAEH,IAAMW,EAAkBZ,EAASa,QAAO,SAAAC,GAAO,OAC7CA,EAAQC,KAAKC,cAAcC,SAASf,MAYtC,OAAKA,GAKH,UAAC,IAAD,CAAKgB,GAAG,UAAUC,QAAQ,OAA1B,WACE,SAAC,IAAD,CAAKD,GAAG,KAAKC,QAAQ,OAAOC,SAAS,OAAOC,QAAS,GAAIC,QAAS,GAAlE,SACGV,EAAgBW,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,GAAIX,EAApB,EAAoBA,KAApB,OACnB,UAAC9B,EAAD,YACE,wBAAKwC,KACL,mCAAWD,MACX,SAAC/B,EAAD,CAAKkC,QAAS,kBArBA,SAACF,EAAMD,EAAOT,EAAMW,GAO1CpB,EANgB,CACdmB,KAAMA,EACND,MAAOA,EACPT,KAAMA,EACNW,GAAIA,KAGNE,EAAAA,EAAAA,IAAM,wBAAD,OAAeH,EAAf,iBAA4BV,EAA5B,yBAauBc,CAAgBJ,EAAMD,EAAOT,EAAMW,IAAvD,mBAHSA,SASf,SAAC,KAAD,OAhBK","sources":["components/Products.js"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { Box } from './Box';\nimport { useLocation } from 'react-router-dom';\nimport { CartContext } from '../CartContext';\nimport { getProducts } from 'services/Api';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst Item = styled.li`\n  padding: ${p => p.theme.space[4]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  min-width: 150px;\n  gap: 15px;\n  background-color: ${p => p.theme.colors.muted};\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.06);\n  }\n`;\nconst Btn = styled.button`\n  background-color: ${p => p.theme.colors.primary};\n  border: none;\n  border-radius: 4px;\n  padding: ${p => p.theme.space[2]}px;\n  color: ${p => p.theme.colors.white};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  cursor: pointer;\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: ${p => p.theme.colors.background};\n    color: ${p => p.theme.colors.primary};\n  }\n`;\nconst Products = () => {\n  const [products, setProducts] = useState([]);\n  const location = useLocation();\n  const href = location.pathname.slice(6);\n  const { addToCart } = useContext(CartContext);\n\n  useEffect(() => {\n    getProducts().then(setProducts);\n  }, []);\n\n  const visibleProducts = products.filter(product =>\n    product.shop.toLowerCase().includes(href)\n  );\n  const handleAddToCart = (name, price, shop, id) => {\n    const product = {\n      name: name,\n      price: price,\n      shop: shop,\n      id: id,\n    };\n    addToCart(product);\n    toast(`ðŸ¦„ Product ${name} from ${shop} added successfully!`);\n  };\n  if (!href) {\n    return null;\n  }\n\n  return (\n    <Box as=\"section\" display=\"flex\">\n      <Box as=\"ul\" display=\"flex\" flexWrap=\"wrap\" gridGap={20} padding={20}>\n        {visibleProducts.map(({ price, name, id, shop }) => (\n          <Item key={id}>\n            <h3>{name}</h3>\n            <p>Price: {price}</p>\n            <Btn onClick={() => handleAddToCart(name, price, shop, id)}>\n              Add\n            </Btn>\n          </Item>\n        ))}\n      </Box>\n      <ToastContainer />\n    </Box>\n  );\n};\n\nexport default Products;\n"],"names":["Item","styled","p","theme","space","colors","text","muted","Btn","primary","white","fontWeights","bold","background","useState","products","setProducts","href","useLocation","pathname","slice","addToCart","useContext","CartContext","useEffect","getProducts","then","visibleProducts","filter","product","shop","toLowerCase","includes","as","display","flexWrap","gridGap","padding","map","price","name","id","onClick","toast","handleAddToCart"],"sourceRoot":""}